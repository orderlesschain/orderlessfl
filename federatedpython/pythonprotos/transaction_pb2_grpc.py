# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import federated_pb2 as federated__pb2
import shared_pb2 as shared__pb2
import transaction_pb2 as transaction__pb2


class TransactionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPublicKey = channel.unary_unary(
                '/protos.TransactionService/GetPublicKey',
                request_serializer=shared__pb2.Empty.SerializeToString,
                response_deserializer=transaction__pb2.PublicKeyResponse.FromString,
                )
        self.ChangeModeRestart = channel.unary_unary(
                '/protos.TransactionService/ChangeModeRestart',
                request_serializer=shared__pb2.OperationMode.SerializeToString,
                response_deserializer=shared__pb2.Empty.FromString,
                )
        self.FailureCommand = channel.unary_unary(
                '/protos.TransactionService/FailureCommand',
                request_serializer=shared__pb2.FailureCommandMode.SerializeToString,
                response_deserializer=shared__pb2.Empty.FromString,
                )
        self.StopAndGetProfilingResult = channel.unary_stream(
                '/protos.TransactionService/StopAndGetProfilingResult',
                request_serializer=shared__pb2.Profiling.SerializeToString,
                response_deserializer=shared__pb2.ProfilingResult.FromString,
                )
        self.ProcessProposalOrderlessFLStream = channel.stream_unary(
                '/protos.TransactionService/ProcessProposalOrderlessFLStream',
                request_serializer=transaction__pb2.ProposalRequest.SerializeToString,
                response_deserializer=shared__pb2.Empty.FromString,
                )
        self.CommitOrderlessFLTransactionStream = channel.stream_unary(
                '/protos.TransactionService/CommitOrderlessFLTransactionStream',
                request_serializer=transaction__pb2.Transaction.SerializeToString,
                response_deserializer=shared__pb2.Empty.FromString,
                )
        self.SubscribeProposalResponse = channel.unary_stream(
                '/protos.TransactionService/SubscribeProposalResponse',
                request_serializer=transaction__pb2.ProposalResponseEventSubscription.SerializeToString,
                response_deserializer=transaction__pb2.ProposalResponse.FromString,
                )
        self.SubscribeTransactionResponse = channel.unary_stream(
                '/protos.TransactionService/SubscribeTransactionResponse',
                request_serializer=transaction__pb2.TransactionResponseEventSubscription.SerializeToString,
                response_deserializer=transaction__pb2.TransactionResponse.FromString,
                )
        self.SubscribeNodeTransactions = channel.unary_stream(
                '/protos.TransactionService/SubscribeNodeTransactions',
                request_serializer=transaction__pb2.TransactionResponseEventSubscription.SerializeToString,
                response_deserializer=transaction__pb2.NodeTransactionResponse.FromString,
                )
        self.GetLatestFederatedModel = channel.unary_unary(
                '/protos.TransactionService/GetLatestFederatedModel',
                request_serializer=federated__pb2.ModelUpdateRequest.SerializeToString,
                response_deserializer=federated__pb2.ModelUpdateRequest.FromString,
                )


class TransactionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPublicKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeModeRestart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FailureCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopAndGetProfilingResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessProposalOrderlessFLStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommitOrderlessFLTransactionStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeProposalResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeTransactionResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeNodeTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestFederatedModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransactionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPublicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPublicKey,
                    request_deserializer=shared__pb2.Empty.FromString,
                    response_serializer=transaction__pb2.PublicKeyResponse.SerializeToString,
            ),
            'ChangeModeRestart': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeModeRestart,
                    request_deserializer=shared__pb2.OperationMode.FromString,
                    response_serializer=shared__pb2.Empty.SerializeToString,
            ),
            'FailureCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.FailureCommand,
                    request_deserializer=shared__pb2.FailureCommandMode.FromString,
                    response_serializer=shared__pb2.Empty.SerializeToString,
            ),
            'StopAndGetProfilingResult': grpc.unary_stream_rpc_method_handler(
                    servicer.StopAndGetProfilingResult,
                    request_deserializer=shared__pb2.Profiling.FromString,
                    response_serializer=shared__pb2.ProfilingResult.SerializeToString,
            ),
            'ProcessProposalOrderlessFLStream': grpc.stream_unary_rpc_method_handler(
                    servicer.ProcessProposalOrderlessFLStream,
                    request_deserializer=transaction__pb2.ProposalRequest.FromString,
                    response_serializer=shared__pb2.Empty.SerializeToString,
            ),
            'CommitOrderlessFLTransactionStream': grpc.stream_unary_rpc_method_handler(
                    servicer.CommitOrderlessFLTransactionStream,
                    request_deserializer=transaction__pb2.Transaction.FromString,
                    response_serializer=shared__pb2.Empty.SerializeToString,
            ),
            'SubscribeProposalResponse': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeProposalResponse,
                    request_deserializer=transaction__pb2.ProposalResponseEventSubscription.FromString,
                    response_serializer=transaction__pb2.ProposalResponse.SerializeToString,
            ),
            'SubscribeTransactionResponse': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeTransactionResponse,
                    request_deserializer=transaction__pb2.TransactionResponseEventSubscription.FromString,
                    response_serializer=transaction__pb2.TransactionResponse.SerializeToString,
            ),
            'SubscribeNodeTransactions': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeNodeTransactions,
                    request_deserializer=transaction__pb2.TransactionResponseEventSubscription.FromString,
                    response_serializer=transaction__pb2.NodeTransactionResponse.SerializeToString,
            ),
            'GetLatestFederatedModel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestFederatedModel,
                    request_deserializer=federated__pb2.ModelUpdateRequest.FromString,
                    response_serializer=federated__pb2.ModelUpdateRequest.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protos.TransactionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TransactionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPublicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.TransactionService/GetPublicKey',
            shared__pb2.Empty.SerializeToString,
            transaction__pb2.PublicKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeModeRestart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.TransactionService/ChangeModeRestart',
            shared__pb2.OperationMode.SerializeToString,
            shared__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FailureCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.TransactionService/FailureCommand',
            shared__pb2.FailureCommandMode.SerializeToString,
            shared__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopAndGetProfilingResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protos.TransactionService/StopAndGetProfilingResult',
            shared__pb2.Profiling.SerializeToString,
            shared__pb2.ProfilingResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessProposalOrderlessFLStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/protos.TransactionService/ProcessProposalOrderlessFLStream',
            transaction__pb2.ProposalRequest.SerializeToString,
            shared__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CommitOrderlessFLTransactionStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/protos.TransactionService/CommitOrderlessFLTransactionStream',
            transaction__pb2.Transaction.SerializeToString,
            shared__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeProposalResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protos.TransactionService/SubscribeProposalResponse',
            transaction__pb2.ProposalResponseEventSubscription.SerializeToString,
            transaction__pb2.ProposalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeTransactionResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protos.TransactionService/SubscribeTransactionResponse',
            transaction__pb2.TransactionResponseEventSubscription.SerializeToString,
            transaction__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeNodeTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protos.TransactionService/SubscribeNodeTransactions',
            transaction__pb2.TransactionResponseEventSubscription.SerializeToString,
            transaction__pb2.NodeTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestFederatedModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.TransactionService/GetLatestFederatedModel',
            federated__pb2.ModelUpdateRequest.SerializeToString,
            federated__pb2.ModelUpdateRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
